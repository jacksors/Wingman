// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id
  username  String   @unique
  firstName String
  lastName  String
  email     String   @unique
  reviews   Review[]
  flights   Flight[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Airline {
  id          Int          @id @default(autoincrement())
  name        String
  flights     Flight[]
  tailNumbers TailNumber[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Airport {
  id             Int      @id @default(autoincrement())
  code           String   @unique
  name           String
  location       String
  reviews        Review[] @relation("AirportReviews")
  incomingRoutes Route[]  @relation("RouteDestination")
  outgoingRoutes Route[]  @relation("RouteOrigin")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Flight {
  id           Int        @id @default(autoincrement())
  flightNumber String
  airline      Airline    @relation(fields: [airlineId], references: [id])
  airlineId    Int
  tailNumber   TailNumber @relation(fields: [tailNumberId], references: [id])
  tailNumberId Int
  route        Route      @relation("RouteFlights", fields: [routeId], references: [id])
  routeId      Int
  users        User[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model TailNumber {
  id        Int      @id @default(autoincrement())
  number    String   @unique
  model     String
  airline   Airline  @relation(fields: [airlineId], references: [id])
  airlineId Int
  reviews   Review[]
  flights   Flight[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Route {
  id            Int      @id @default(autoincrement())
  origin        Airport  @relation(fields: [originId], references: [id], name: "RouteOrigin")
  originId      Int
  destination   Airport  @relation(fields: [destinationId], references: [id], name: "RouteDestination")
  destinationId Int
  flights       Flight[] @relation("RouteFlights")
  reviews       Review[] @relation("RouteReviews")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Review {
  id           Int         @id @default(autoincrement())
  title        String
  content      String
  rating       Int
  reviewType   ReviewType
  user         User        @relation(fields: [userId], references: [id])
  userId       String
  airport      Airport?    @relation("AirportReviews", fields: [airportId], references: [id])
  airportId    Int?
  tailNumber   TailNumber? @relation(fields: [tailNumberId], references: [id])
  tailNumberId Int?
  route        Route?      @relation("RouteReviews", fields: [routeId], references: [id])
  routeId      Int?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

enum ReviewType {
  ROUTE
  AIRPORT
  TAIL_NUMBER
}
